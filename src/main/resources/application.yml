server:
  port: 8087

spring:
  application:
    name: api-gateway

  cloud:
    gateway:
      routes:
        # Servicio de autenticaciÃ³n (pÃºblico)
        - id: auth-service
          uri: http://localhost:8086
          predicates:
            - Path=/auth/**
          filters:
            - StripPrefix=1

        # Servicio de cuentas
        - id: account-service
          uri: http://localhost:8082
          predicates:
            - Path=/account/**
          filters:
            - StripPrefix=1
            - JwtAuthFilter

        # Servicio de clientes
        - id: customer-service
          uri: http://localhost:8083
          predicates:
            - Path=/customer/**
          filters:
            - StripPrefix=1
            - JwtAuthFilter

        # Servicio de transacciones
        - id: transaction-service
          uri: http://localhost:8084
          predicates:
            - Path=/transaction/**
          filters:
            - StripPrefix=1
            - JwtAuthFilter

        # Servicio de crÃ©ditos
        - id: credit-service
          uri: http://localhost:8085
          predicates:
            - Path=/credit/**
          filters:
            - StripPrefix=1
            - JwtAuthFilter

      # ConfiguraciÃ³n CORS global
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "http://localhost:3000"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders:
              - "*"
            allowCredentials: true
            maxAge: 3600

# Clave secreta usada por JwtAuthFilter
jwt:
  secret: mySecretKeyForBankingSystemNttDataBootcamp2024MustBeLongEnoughForHS512

# ðŸªµ Logging detallado
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.web: INFO

# ðŸ©º Actuator (para inspeccionar rutas)
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
